{"ast":null,"code":"var _jsxFileName = \"/Users/hughcameron/Documents/GitHub/spinalhealth/src/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localiser = momentLocalizer(moment);\nconst MyCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([{\n    title: \"Sample appointment\",\n    start: new Date(2025, 1, 14, 10, 0),\n    end: new Date(2025, 1, 14, 11, 0)\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Spinal Health Organiser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localiser,\n        events: events,\n        style: {\n          height: 500\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCalendar, \"ePGs6+/mPqce0dEGf6uvGz5LZm0=\");\n_c = MyCalendar;\nexport default MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useState","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localiser","MyCalendar","_s","events","setEvents","title","start","Date","end","children","fileName","_jsxFileName","lineNumber","columnNumber","localizer","style","height","_c","$RefreshReg$"],"sources":["/Users/hughcameron/Documents/GitHub/spinalhealth/src/Calendar.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\nconst localiser = momentLocalizer(moment)\n\nconst MyCalendar = () => {\n    const [events, setEvents] = useState([\n        {\n            title: \"Sample appointment\",\n            start: new Date(2025, 1, 14, 10, 0),\n            end: new Date(2025, 1, 14, 11, 0)\n        }\n    ])\n\n    \n    \n    return(\n    <div>\n        <div>\n            <h1>Spinal Health Organiser</h1>\n        </div>\n        <div>\n            <Calendar \n                localizer={localiser}\n                events={events}\n                style={{height: 500}}\n            />\n        </div>\n    </div>\n\n    )\n}\n\nexport default MyCalendar"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAM,CAAC;AAEzC,MAAMI,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CACjC;IACIW,KAAK,EAAE,oBAAoB;IAC3BC,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACnCC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACpC,CAAC,CACJ,CAAC;EAIF,oBACAR,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,eACIV,OAAA;QAAAU,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACNd,OAAA;MAAAU,QAAA,eACIV,OAAA,CAACJ,QAAQ;QACLmB,SAAS,EAAEd,SAAU;QACrBG,MAAM,EAAEA,MAAO;QACfY,KAAK,EAAE;UAACC,MAAM,EAAE;QAAG;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGV,CAAC;AAAAX,EAAA,CA1BKD,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AA4BhB,eAAeA,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}